- hosts: all
  become: yes
  tasks:
    - name: Install Docker and Kube dependencies
      shell: |
        # Install Docker
        apt update && apt install -y docker.io apt-transport-https curl

        # Add Kubernetes signing key
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

        # Add Kubernetes repository
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' > /etc/apt/sources.list.d/kubernetes.list

        # Install Kubernetes components
        apt update && apt install -y kubelet kubeadm kubectl
        apt-mark hold kubelet kubeadm kubectl

        # Enable and start Docker
        systemctl enable docker
        systemctl start docker

        # Configure containerd
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
        systemctl restart containerd

        # Disable swap
        swapoff -a
        sed -i '/swap/d' /etc/fstab

        # Load required kernel modules
        modprobe overlay
        modprobe br_netfilter

        # Configure kernel parameters
        cat <<EOF | tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sysctl --system

- hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes Master
      shell: |
        kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU
      register: init_output

    - name: Setup kubeconfig for root user
      shell: |
        mkdir -p /root/.kube
        cp -i /etc/kubernetes/admin.conf /root/.kube/config
        chown root:root /root/.kube/config

    - name: Setup kubeconfig for ubuntu user
      shell: |
        mkdir -p /home/ubuntu/.kube
        cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
        chown -R ubuntu:ubuntu /home/ubuntu/.kube

    - name: Install Flannel
      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

    - name: Get join command
      shell: kubeadm token create --print-join-command
      register: join_cmd

    - name: Save join command
      set_fact:
        join_command: "{{ join_cmd.stdout }}"

- hosts: workers
  become: yes
  tasks:
    - name: Join worker to cluster
      shell: "{{ hostvars['master']['join_command'] }}"
